module DistributedGreedyPackingLB {

extern module DistBaseLB;
initnode void lbinit(void);

group [migratable] DistributedGreedyPackingLB : DistBaseLB {
  entry void DistributedGreedyPackingLB(const CkLBOptions &);
  entry [expedicted] void StartTaskTrade(int host_id, double host_load);
  entry [expedicted] void RespondTrade(bool ok, int remote_id, double remote_load);
  entry [expedicted] void SendTasks(int host_id, double host_load, int info_count, int task_ids[info_count], double task_loads[info_count], int arr_positions[info_count]);
  entry void ConfirmRecv(bool recv, int who, int arr_position);
  entry void MoveTasks(int who, int msg_size,int task_id[msg_size], int destination[msg_size]);
  entry void ConfirmTasks();
  entry void InformMigrations(int migs);
  entry [reductiontarget] void NextIteration(double);
  entry [reductiontarget] void FinishLoadBalance();
  entry [reductiontarget] void FinalBarrier();
};

};
